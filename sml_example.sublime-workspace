{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"EXPE",
				"EXPECT_OK"
			],
			[
				"Thro",
				"ThrottledGripErrorLog"
			],
			[
				"Thr",
				"ThrottledGripErrorLog"
			],
			[
				"GripE",
				"GripThreadErrorConsumer"
			],
			[
				"GripThre",
				"GripThreadErrorQueue"
			],
			[
				"Grip",
				"GripInterface"
			],
			[
				"fi",
				"file_descriptor_"
			],
			[
				"grip",
				"grip_interface_"
			],
			[
				"GripPres",
				"GripPressureConsumer"
			],
			[
				"GripThred",
				"GripThreadErrorProducer"
			],
			[
				"GripThreadE",
				"GripThreadErrorQueue"
			],
			[
				"GripPre",
				"GripPressureQueue"
			],
			[
				"rt_sc",
				"rt_scope_"
			],
			[
				"mid",
				"middleware_to_controller_message_queue_"
			],
			[
				"guid_c",
				"guid_config_"
			],
			[
				"motor",
				"motor_command_overrides_"
			],
			[
				"kZ",
				"kZeroParamsDev"
			],
			[
				"MotorThreadError",
				"MotorThreadErrorProducer"
			],
			[
				"EXE",
				"EXPECT_OK"
			],
			[
				"motor_",
				"motor_threads_"
			],
			[
				"MotorT",
				"MotorThread"
			],
			[
				"over",
				"overrun_count_"
			],
			[
				"MotorThread",
				"MotorThreadErrorQueue"
			],
			[
				"MotorCommand",
				"MotorCommandQueue"
			],
			[
				"ground",
				"grounded_master"
			],
			[
				"exped",
				"expected_current"
			],
			[
				"kMo",
				"kSimMotorProto"
			],
			[
				"motor_de",
				"motor_debug_avg_len"
			],
			[
				"motor_du",
				"motor_debug_level"
			],
			[
				"posi",
				"position_command"
			],
			[
				"debug_av",
				"debug_avg_len_"
			],
			[
				"debug_",
				"debug_avg_counter_"
			],
			[
				"ui",
				"uint64_t"
			],
			[
				"ts_d",
				"ts_diff_current〔variable〕"
			],
			[
				"ts",
				"ts_diff_current〔variable〕"
			],
			[
				"Ini",
				"InitializePid"
			],
			[
				"param",
				"params_dev_"
			],
			[
				"pos",
				"position_command"
			],
			[
				"contoll",
				"controller_result"
			],
			[
				"e",
				"eef_pose_camera_frame"
			],
			[
				"Mode",
				"ModeName"
			],
			[
				"Pred",
				"PredefinedPoseToArray"
			],
			[
				"kPres",
				"kPresentLeftProtoFilename"
			],
			[
				"grounded_master_confi",
				"grounded_master_config_dir"
			],
			[
				"kP",
				"kPresentLeftFilename"
			],
			[
				"k",
				"kPresentLeft"
			],
			[
				"def",
				"default_home_pose"
			],
			[
				"cur",
				"current_command"
			],
			[
				"Motor",
				"MotorArray"
			],
			[
				"EX",
				"EXPECT_OK"
			],
			[
				"simul",
				"simulated_"
			],
			[
				"release",
				"release_name"
			],
			[
				"Star",
				"StartPrintingStatistics"
			],
			[
				"command",
				"command_endpoint_"
			],
			[
				"netw",
				"network_statistics"
			],
			[
				"Prin",
				"PrintStatistics"
			],
			[
				"GuidCo",
				"GuidCommandListener"
			],
			[
				"net",
				"network_statistics"
			],
			[
				"guid_com",
				"guid_command_queue"
			],
			[
				"GuidC",
				"GuidCommandListener"
			],
			[
				"statist",
				"statistics"
			],
			[
				"guid_command_",
				"guid_command_queue"
			],
			[
				"Guid",
				"GuidCommandListener"
			],
			[
				"var",
				"variance_period"
			],
			[
				"debug",
				"debug_print_"
			],
			[
				"deb",
				"debug_print"
			],
			[
				"stat",
				"status_receiver"
			],
			[
				"GuidStat",
				"GuidStatusReceiver"
			],
			[
				"default",
				"default_value"
			],
			[
				"kM",
				"kMotorArrayConfigSimFilename"
			],
			[
				"guid_s",
				"guid_state_queue"
			],
			[
				"REA",
				"ReadGuidState"
			],
			[
				"dev",
				"dev_paths"
			],
			[
				"robo",
				"robot_thread"
			],
			[
				"err",
				"error_"
			],
			[
				"curr",
				"current_goals_"
			],
			[
				"tim",
				"timer_count"
			],
			[
				"erro",
				"error_dot"
			],
			[
				"coun",
				"count_period_"
			],
			[
				"expe",
				"expected_positions"
			],
			[
				"Comm",
				"CommandArray"
			],
			[
				"time",
				"time_step_"
			],
			[
				"kEx",
				"kExpectedPosition"
			],
			[
				"Eva",
				"EvaluatePid"
			],
			[
				"uin",
				"uint32_t"
			],
			[
				"encod",
				"encoder_position"
			],
			[
				"input",
				"input_command"
			],
			[
				"mode",
				"modeop_handler_"
			],
			[
				"moe",
				"modeop_result"
			],
			[
				"Sta",
				"StatusLoopTask"
			],
			[
				"rob",
				"robot_thread"
			],
			[
				"guid",
				"guid_state"
			],
			[
				"comm",
				"command_request_queue_"
			],
			[
				"Command",
				"CommandRequest"
			],
			[
				"exe",
				"executor"
			],
			[
				"SetP",
				"SetProximalGimbalCommands"
			],
			[
				"Con",
				"Controller"
			],
			[
				"error",
				"error_log_time_"
			],
			[
				"eror",
				"error_log_time"
			],
			[
				"motors",
				"motors"
			],
			[
				"posit",
				"positions"
			],
			[
				"joint_stat",
				"joint_statuses"
			],
			[
				"Pub",
				"PublishGuidStatus"
			],
			[
				"G",
				"GuidServiceRpcServer"
			],
			[
				"joint_s",
				"joint_statuses"
			],
			[
				"kC",
				"kControllerConfigFilename"
			],
			[
				"grou",
				"grounded_master"
			],
			[
				"robot",
				"robot_deadline_thread"
			],
			[
				"uni",
				"unique_ptr"
			],
			[
				"Contr",
				"ControllerParams"
			],
			[
				"contro",
				"controller_config"
			],
			[
				"Ex",
				"EXPECT_OK"
			],
			[
				"con",
				"control"
			],
			[
				"Moto",
				"MotorMode"
			],
			[
				"status",
				"statuses"
			],
			[
				"statu",
				"statuses"
			],
			[
				"coman",
				"command_request"
			],
			[
				"kNu",
				"kNumGroundedMasterDof"
			],
			[
				"timer_",
				"timer_count"
			],
			[
				"Val",
				"ValidateErrno"
			],
			[
				"valid",
				"ValidateErrno"
			],
			[
				"Simula",
				"SimulatedMotor"
			],
			[
				"GUID_MODE_I",
				"GUID_MODE_ID_ERROR_UNKNOWN"
			],
			[
				"child",
				"child_joint〔variable〕"
			],
			[
				"Set",
				"SetCommandCurrent_"
			],
			[
				"SetC",
				"SetCommandMode_"
			],
			[
				"Run",
				"RunPositionControl"
			],
			[
				"groun",
				"grounded_master_modeop_handler"
			]
		]
	},
	"buffers":
	[
	],
	"build_system": "Packages/C++/C++ Single File.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"packagere",
				"PackageResourceViewer: Open Resource"
			],
			[
				"packageresour e",
				"PackageResourceViewer: Extract All Packages"
			],
			[
				"packagere open",
				"PackageResourceViewer: Open Resource"
			],
			[
				"name",
				"Snippet: namespace"
			],
			[
				"package re op",
				"PackageResourceViewer: Open Resource"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"spell",
				"Google Spell Check"
			],
			[
				"pref",
				"Preferences: Settings"
			],
			[
				"bash",
				"Set Syntax: Bourne Again Shell (bash)"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"xml",
				"Set Syntax: XML"
			],
			[
				"gdb",
				"SublimeGDB: Start Debugging"
			],
			[
				"remov",
				"Package Control: Remove Package"
			],
			[
				"proje",
				"Project: Add Folder"
			],
			[
				"gdb ",
				"SublimeGDB: Start Debugging"
			],
			[
				"project",
				"Project: Edit Project"
			],
			[
				"sublimegdb",
				"Preferences: SublimeGDB Settings – Default"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"remve",
				"Package Control: Remove Package"
			],
			[
				"jsx",
				"Set Syntax: JSX"
			],
			[
				"xm",
				"Set Syntax: XML"
			],
			[
				"js",
				"Set Syntax: JSX"
			],
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"cma",
				"Set Syntax: CMake"
			],
			[
				"INSTALL",
				"Package Control: Install Package"
			],
			[
				"preference",
				"Preferences: Settings"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/tyler/workspace/sml_example"
	],
	"file_history":
	[
		"/home/tyler/verb/experimental/grounded_master/sensor/grip.h",
		"/home/tyler/verb/experimental/grounded_master/guid/testdata/grounded_master_config.pbtxt",
		"/home/tyler/verb/experimental/grounded_master/config/data/grounded_master_config.pbtxt",
		"/home/tyler/verb/experimental/grounded_master/config/grounded_master_node.proto",
		"/home/tyler/verb/experimental/grounded_master/sensor/BUILD",
		"/home/tyler/verb/experimental/grounded_master/guid/robot_thread.cc",
		"/home/tyler/workspace/interviews/path.cc",
		"/home/tyler/verb/experimental/grounded_master/guid/status_thread.h",
		"/home/tyler/verb/experimental/grounded_master/guid/robot_thread.h",
		"/home/tyler/verb/experimental/grounded_master/guid/status_thread.cc",
		"/home/tyler/verb/experimental/grounded_master/guid/controller_test.cc",
		"/home/tyler/verb/experimental/grounded_master/guid/robot_thread_test.cc",
		"/home/tyler/verb/experimental/grounded_master/guid/status_thread_test.cc",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_test.cc",
		"/home/tyler/verb/experimental/grounded_master/sensor/grip_test.cc",
		"/home/tyler/verb/experimental/grounded_master/sensor/grip.cc",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_thread.cc",
		"/home/tyler/verb/experimental/grounded_master/guid/robot_node.cc",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_interface.h",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_array.h",
		"/home/tyler/verb/experimental/.git/COMMIT_EDITMSG",
		"/home/tyler/verb/verb/libraries/robotics/control/result.h",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_array.cc",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_thread.h",
		"/home/tyler/verb/experimental/grounded_master/guid/BUILD",
		"/home/tyler/verb/verb/sim/exercise_launcher/server/launch_status.h",
		"/home/tyler/verb/verb/libraries/robotics/control/result_code.proto",
		"/home/tyler/verb/third_party/google/protobuf/src/google/protobuf/stubs/statusor.h",
		"/home/tyler/verb/experimental/grounded_master/guid/controller.h",
		"/home/tyler/verb/experimental/grounded_master/communication/grounded_master_guid.proto",
		"/home/tyler/verb/experimental/grounded_master/communication/grounded_master_client_server_test.cc",
		"/home/tyler/verb/experimental/grounded_master/control/status.h",
		"/home/tyler/verb/verb/libraries/node/loop/timer_posix.cc",
		"/home/tyler/verb/robot_urdf/grounded_master/development/grounded_master/urdf/grounded_master.urdf",
		"/home/tyler/verb/experimental/grounded_master/sensor/constants.h",
		"/home/tyler/verb/robot_urdf/grounded_master/development/arm_prt013171_r6/urdf/arm_prt013171_r6.urdf.xacro",
		"/home/tyler/verb/experimental/grounded_master/guid/controller.cc",
		"/home/tyler/verb/verb/libraries/uid/constants.h",
		"/home/tyler/verb/experimental/grounded_master/control/modeop/modeop_torque_compensation.h",
		"/home/tyler/verb/.repo/manifests/default.xml",
		"/home/tyler/.cache/bazel/_bazel_tyler/da0f5bee4d23bbd80fa6928ddbcc5bd6/execroot/verb/bazel-out/k8-fastbuild/testlogs/experimental/grounded_master/control/modeop/modeop_active_teleoperation_test/test.log",
		"/home/tyler/.cache/bazel/_bazel_tyler/da0f5bee4d23bbd80fa6928ddbcc5bd6/execroot/verb/bazel-out/k8-fastbuild/testlogs/experimental/grounded_master/control/modeop/modeop_gui_input_test/test.log",
		"/home/tyler/.cache/bazel/_bazel_tyler/da0f5bee4d23bbd80fa6928ddbcc5bd6/execroot/verb/bazel-out/k8-fastbuild/testlogs/experimental/grounded_master/control/modeop/modeop_torque_compensation_test/test.log",
		"/home/tyler/.cache/bazel/_bazel_tyler/da0f5bee4d23bbd80fa6928ddbcc5bd6/execroot/verb/bazel-out/k8-fastbuild/testlogs/experimental/grounded_master/control/guid_joint_to_motor_test/test.log",
		"/home/tyler/.cache/bazel/_bazel_tyler/da0f5bee4d23bbd80fa6928ddbcc5bd6/execroot/verb/bazel-out/k8-fastbuild/testlogs/experimental/grounded_master/algorithm/algorithm_spring_compensation_test/test.log",
		"/home/tyler/verb/verb/executables/system/simulator/simulator.sh",
		"/home/tyler/verb/verb/executables/system/simulator/run_simulator.sh",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/robot_rt_message_thread.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/robot_loop.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/controller.h",
		"/home/tyler/verb/verb/libraries/robotics/control/time_utilities.h",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/client_examples/plot_motor_status.py",
		"/home/tyler/verb/verb/tools/test_station_plots/run_test_station_plots.sh",
		"/home/tyler/verb/verb/config/data/system_config.localhost.pbtxt",
		"/home/tyler/verb/logs/test.out",
		"/home/tyler/verb/experimental/grounded_master/algorithm/testdata/grounded_master_motor.pbtxt",
		"/home/tyler/bitchin_unix/.my.bashrc",
		"/home/tyler/verb/verb/libraries/robotics/control/time_utilities.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/controller.cc",
		"/home/tyler/verb/verb/libraries/thread/message_loop_thread.cc",
		"/home/tyler/verb/verb/executables/system/robot_node/robot_node.cc",
		"/home/tyler/verb/experimental/research/verb/libraries/robotics/control/robot/robot_rt_message_thread.cc",
		"/home/tyler/verb/experimental/grounded_master/communication/params_dev.cc",
		"/home/tyler/verb/experimental/grounded_master/communication/BUILD",
		"/home/tyler/verb/verb/libraries/robotics/control/math/pose.h",
		"/home/tyler/verb/experimental/grounded_master/communication/params_dev.h",
		"/home/tyler/verb/experimental/grounded_master/motor/motor.cc",
		"/home/tyler/verb/experimental/grounded_master/control/command_message.h",
		"/home/tyler/verb/verb/libraries/robotics/control/motor/command_message.h",
		"/home/tyler/verb/experimental/grounded_master/control/modeop_handler.cc",
		"/home/tyler/verb/experimental/grounded_master/control/modeop/modeop_active_teleoperation.cc",
		"/home/tyler/verb/experimental/grounded_master/control/modeop/modeop_torque_compensation.cc",
		"/home/tyler/verb/experimental/grounded_master/control/BUILD",
		"/home/tyler/.gitconfig",
		"/home/tyler/verb/experimental/.git/MERGE_MSG",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/proto_interface/rt_scope.proto",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_simulated.h",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_simulated.cc",
		"/home/tyler/verb/experimental/grounded_master/motor/motor.h",
		"/home/tyler/verb/experimental/grounded_master/motor/BUILD",
		"/home/tyler/verb/verb/libraries/node/cyclic_executor.h",
		"/home/tyler/verb/verb/libraries/robotics/control/math/geometry_utilities.h",
		"/home/tyler/verb/verb/sdk/optional.h",
		"/home/tyler/verb/verb/interfaces/arm.proto",
		"/home/tyler/verb/experimental/grounded_master/rt_daig/rt_scope_client/BUILD",
		"/home/tyler/notes/rt_scope.md",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope_client/data_to_file.cc",
		"/home/tyler/verb/third_party/chromium/src/base/message_loop/message_loop.h",
		"/home/tyler/.config/sublime-text-3/Packages/C++/Snippets/namespace-..-(namespace).sublime-snippet",
		"/home/tyler/.config/sublime-text-3/Packages/User/nsanon.sublime-snippet",
		"/home/tyler/.config/sublime-text-3/Packages/User/namespace.sublime-snippet",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope_client/README.md",
		"/home/tyler/verb/verb/libraries/rtcomm/can/robot_comm_client.cc",
		"/home/tyler/verb/experimental/grounded_master/motor/motor_thread_test.cc",
		"/home/tyler/verb/experimental/grounded_master/rt_daig/rt_scope_client/data_to_file.cc",
		"/home/tyler/verb/.repo/manifest.xml",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/BUILD",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/logger_master_robot.h",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/logger_master_robot_test.cc",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/rt_scope_builder_master_robot.h",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/rt_scope_builder_master_robot.cc",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/message_reader.h",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/proto_interface/master_rt_scope.proto",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/periodic_publisher_master_robot.cc",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/periodic_publisher_master_robot.h",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/logger_master_robot.cc",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/spsc_queue_logger.h",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/BUILD",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/message_reader_master_robot.h",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/message_reader_master_robot.cc",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/logger_guid.cc",
		"/home/tyler/verb/experimental/grounded_master/rt_diag/rt_scope/logger_guid.h",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/rt_scope_builder_robot.cc",
		"/home/tyler/verb/verb/libraries/rt_diag/reconfigure/robot_reconfigure_server.h",
		"/home/tyler/verb/experimental/research/verb/libraries/robotics/control/robot/controller_message_runner.h",
		"/home/tyler/verb/experimental/research/verb/libraries/robotics/control/robot/controller_message_runner.cc",
		"/home/tyler/verb/verb/libraries/rt_diag/reconfigure/robot_reconfigure_server.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/platform/controller_message_dev_runner.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/controller_message_runner.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/controller_message.h",
		"/home/tyler/verb/verb/libraries/node/loop/runtime_logger.h",
		"/home/tyler/verb/verb/libraries/robotics/control/robot/controller_message_runner.h",
		"/home/tyler/verb/verb/libraries/robotics/control/platform/controller_message_runner.cc",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/rt_scope_server.h",
		"/home/tyler/verb/verb/libraries/rt_diag/rt_scope/rt_scope_server.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/platform/controller.cc",
		"/home/tyler/verb/verb/libraries/robotics/control/platform/controller_message.h",
		"/home/tyler/verb/experimental/grounded_master/motor/constants.h"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 101.0,
		"where_history":
		[
			"/home/tyler/verb/verb",
			"/home/tyler/verb/experimental",
			"/home/tyler/verb/verb",
			"/home/tyler/verb/experimental/grounded_master",
			"/home/tyler/verb/experimental",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/experimental/",
			"/home/tyler/verb/verb,*.h",
			"/home/tyler/verb/verb,*.pbtxt",
			"/home/tyler/verb/experimental/grounded_master",
			"/home/tyler/verb/verb",
			"/home/tyler/verb/experimental",
			"/home/tyler/verb/verb",
			"/home/tyler/verb",
			"/home/tyler/verb/verb",
			"/home/tyler/verb/experimental/grounded_master",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/config",
			"/home/tyler/verb/experimental",
			"/home/tyler/experimental",
			"/home/tyler/verb/",
			"/home/tyler/verb/experimental/grounded_master",
			"/home/tyler/verb/verb/,*test.cc",
			"/home/tyler/verb/verb/libraries/robotics/control",
			"/home/tyler/verb/verb/libraries/robotics/control/motor",
			"/home/tyler/verb/",
			"/home/tyler/verb/experimental/",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/,*.proto",
			"/home/tyler/verb/verb/,*.pbtxt",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/experimental/grounded_master/guid",
			"/home/tyler/verb/verb/experimental/grounded_master/motor",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/libraries",
			"/home/tyler/verb/verb/config",
			"/home/tyler/verb/third_party",
			"/home/tyler/verb/verb",
			"/home/tyler/verb",
			"/home/tyler/verb/verb/experimental/grounded_master",
			"/home/tyler/verb/third_party",
			"/home/tyler/verb/",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/,BUILD",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/config/",
			"/home/tyler/verb/verb/config/schema",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/libraries/robotics/",
			"/home/tyler/verb/verb/libraries/robotics/control/robot",
			"/home/tyler/verb/libraries/robotics/control/robot",
			"/home/tyler/verb/verb/experimental",
			"/home/tyler/verb/verb/",
			"/home/tyler/verb/verb/executables/system/simulator",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": true,
		"find_history":
		[
			"gm-config-dir",
			"Epsilon =",
			"Epsilon",
			"EXPECT_OK_DBG",
			"<<<<<<< HEAD\n  read_result = motors.Read();\n  EXPECT_OK_DEBUG(read_result.result());\n=======\n  time::testing::Sleep(kReadPeriod);\n  read_result = motors.Read(kReadPeriod);\n  EXPECT_OK_DBG(read_result.result());\n>>>>>>> cfa46b3... [ARPC-715] Implement motor threads",
			"EXPECT_OK_DBG",
			"EXPECT_OK",
			"EXPECT_OK_DBG",
			") ",
			"grip.Read",
			"\n  motor_thread_rate: 4000",
			"EXPECT_OK(",
			"EXPECT_OK",
			"status_thread_rate: 2000",
			"period",
			"status_thread_rate: 2000",
			"EXPECT_OK(",
			"EXPECT_OK(motors.Stop());",
			"EXPECT_OK(read_result);",
			"EXPECT_OK",
			"EXPECT_OK_DBG(result);",
			"EXPECT_OK",
			"EXPECT_OK_DBG(params_result);",
			"EXPECT_OK_DBG(config_result);",
			"EXPECT_OK",
			"EXPECT_OK_DBG(read_result);",
			"EXPECT_OK",
			"EXPECT_OK_DBG(result);",
			"EXPECT_OK_DBG(motors.Read(kReadPeriod));",
			"EXPECT_OK_DBG(motor_pointers);",
			"EXPECT_OK(",
			"#define EXPECT_OK",
			"verb::Status::OK);",
			".result());",
			"control::Result::OK);",
			"<<<<<<< HEAD\n  read_result = motors.Read();\n  EXPECT_OK(read_result);\n=======\n  time::testing::Sleep(kReadPeriod);\n  read_result = motors.Read(kReadPeriod);\n  EXPECT_EQ(read_result.result(), control::Result::OK);\n>>>>>>> f08c94f... [ARPC-715] Implement motor threads",
			"<<<<<<< HEAD\n  control::ResultOr<MotorStatusArray> read_result = motors.Read();\n  EXPECT_OK(read_result);\n=======\n  time::testing::Sleep(kReadPeriod);\n  control::ResultOr<MotorStatusArray> read_result = motors.Read(kReadPeriod);\n  EXPECT_EQ(read_result.result(), control::Result::OK);\n>>>>>>> f08c94f... [ARPC-715] Implement motor threads",
			"\"\n",
			"return Error",
			"class Error",
			"INTERNAL =",
			"period_",
			"()),",
			"period_(",
			"EXPECT_EQ(result, control::Result::OK);",
			"EXPECT_OK",
			"motor_thread",
			"\"));\n",
			"status_rate",
			"debug_window_length",
			"  debug_window_length: 20",
			"debug_window_length: 20",
			"debug_window_length",
			"<<<<<<< HEAD\n  control::ResultOr<MotorStatusArray> read_result = motors.Read();\n  EXPECT_EQ(read_result.result(), control::Result::OK);\n=======",
			">>>>>>> f0ebd77... [ARPC-715] Implement motor threads",
			"<<<<<<< HEAD\n  read_result = motors.Read();\n  EXPECT_EQ(read_result.result(), control::Result::OK);\n=======",
			"EXPECT_OK(read_result);",
			"<<<<<<< HEAD\n  control::ResultOr<MotorStatusArray> read_result = motors.Read();\n  EXPECT_EQ(read_result.result(), control::Result::OK);\n=======\n  time::testing::Sleep(kReadPeriod);\n  control::ResultOr<MotorStatusArray> read_result = motors.Read(kReadPeriod);\n  EXPECT_OK(read_result);\n>>>>>>> f0ebd77... [ARPC-715] Implement motor threads",
			"EXPECT_OK",
			"grip_position",
			"EXPECT_OK",
			"EXPECT_EQ(controller_.RunTask(motor_statuses, grip_position, &commands),\n            verb::Status::OK);",
			"EXPECT_EQ(controller_.RunTask(statuses, grip_position, &commands),\n            verb::Status::OK);",
			"EXPECT_EQ(read_result, verb::Status::OK);",
			"EXPECT_EQ(motors.Initialize(), verb::Status::OK);",
			"EXPECT_EQ(motor_pointers.result(), verb::Status::OK);",
			"EXPECT_EQ(controller_.Initialize(), verb::Status::OK);",
			"EXPECT_OK",
			"EXPECT_EQ(result.result(), verb::Status::OK);",
			"EXPECT_EQ(result, verb::Status::OK);",
			"EXPECT_EQ(motors.Read(kReadPeriod), verb::Status::OK);",
			"EXPECT_EQ(motors.Write(commands), verb::Status::OK);",
			"EXPECT_EQ(motor_pointers.result(), verb::Status::OK);",
			"EXPECT_OK",
			"EXPECT_OK(motors.Read(kReadPeriod));",
			"\n    EXPECT_OK(motors.Read(kReadPeriod));\n    EXPECT_OK(motors.Write(commands));\n    time::testing::Sleep(kReadPeriod);",
			"debug_log_rate",
			"2e3",
			"MotorThread",
			"{}\n",
			"MotorThread",
			"INTERNAL",
			"control::Result",
			"params",
			"uint32_t grip_pressure",
			"grip_pressure",
			"grip",
			"float",
			"double",
			"GROUNDED_MASTER_SENSOR_GRIP_H_",
			"roll_link",
			"rt_scope_log_rate",
			"rt_scope_log_rate: 200",
			"rt_scope_log_rate",
			"rt_scope_log_rate: 200",
			"rt_diag_config",
			"uint32_t",
			"kMaxGripPressure",
			"kMinUidPressureRaw",
			"expected_grip_pressure",
			"position",
			"grip",
			"float grip_pressure = std::numeric_limits<float>::max();",
			"grip_position",
			"float",
			"grip_position",
			"float",
			"grip_position",
			"float",
			"uid::kMaxUidPressureRaw",
			"localhost",
			"rt_diag",
			"2e3",
			"1e3",
			"2e3",
			"double",
			"kFrequency",
			"rtscope_log_cycles_",
			"debug_log_rate",
			"debug_log_rate: 400",
			"debug_log_rate",
			");\n",
			"1.1",
			"control::Pose::Identity()",
			"kZeroParamsDev",
			"()",
			"command_message",
			"kNotFound"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"status_thread_rate",
			"kNumGroundedMasterJoints"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 287.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sml_example.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"run_simula",
				"verb/executables/system/simulator/run_simulator.sh"
			],
			[
				"test_station_plots",
				"verb/tools/test_station_plots/run_test_station_plots.sh"
			],
			[
				"plots",
				"verb/libraries/rt_diag/rt_scope/client_examples/plot_motor_status.py"
			],
			[
				"robot_node.cc",
				"verb/executables/system/robot_node/robot_node.cc"
			],
			[
				"robot_node",
				"verb/executables/system/robot_node/robot_node.cc"
			],
			[
				"optional.h",
				"verb/sdk/optional.h"
			],
			[
				"motor_array.cc",
				"experimental/grounded_master/motor/motor_array.cc"
			],
			[
				"controller_message.h",
				"verb/libraries/robotics/control/robot/controller_message.h"
			],
			[
				"controller.h",
				"verb/libraries/robotics/control/robot/controller.h"
			],
			[
				"controller.cc",
				"verb/libraries/robotics/control/robot/controller.cc"
			],
			[
				"time.h",
				"third_party/chromium/src/base/time/time.h"
			],
			[
				"pid_con",
				"verb/libraries/robotics/controller_libraries/pid_controller.cc"
			],
			[
				"grounded_master_sensor",
				"experimental/grounded_master/guid/testdata/grounded_master_sensor.pbtxt"
			],
			[
				"grounded_master_sensor.sim",
				"experimental/grounded_master/guid/testdata/grounded_master_sensor.sim.pbtxt"
			],
			[
				"grounded_master_algori",
				"experimental/grounded_master/algorithm/testdata/grounded_master_algorithm_params.pbtxt"
			],
			[
				"guid_interfa",
				"experimental/grounded_master/tools/guid_platform_interface/lib/guid_interface.py"
			],
			[
				"guid_model_builder",
				"experimental/grounded_master/control/guid_model_builder.cc"
			],
			[
				"guid_model_bu",
				"experimental/grounded_master/control/guid_model_builder.cc"
			],
			[
				"resultor",
				"libraries/robotics/control/resultor.h"
			],
			[
				"controller_test",
				"experimental/grounded_master/guid/controller_test.cc"
			],
			[
				"cycl",
				"libraries/node/cyclic_executor.h"
			],
			[
				"period",
				"libraries/node/periodic_publisher.h"
			],
			[
				"robot_node.pr",
				"config/schema/robot_node.proto"
			],
			[
				"system_config.pb",
				"config/data/system_config.pbtxt"
			],
			[
				"thread.h",
				"libraries/thread/thread.h"
			],
			[
				"thread.cc",
				"libraries/thread/thread.cc"
			],
			[
				"tool_common_params",
				"libraries/robotics/control/robot/tool/common/tool_common_params.proto"
			],
			[
				"result",
				"libraries/robotics/control/result.h"
			],
			[
				"result_code",
				"libraries/robotics/control/result_code.proto"
			],
			[
				"result.h",
				"libraries/robotics/control/result.h"
			],
			[
				"rt_state_machine",
				"libraries/robotics/control/rt_state_machine.h"
			],
			[
				"platform_node.cc",
				"executables/system/platform_node/platform_node.cc"
			],
			[
				"example_n",
				"libraries/node/examples/node_example.cc"
			],
			[
				"pose.h",
				"libraries/robotics/control/math/pose.h"
			],
			[
				"timer_loop",
				"libraries/thread/timer_loop.h"
			],
			[
				"system_config.h",
				"config/system_config.h"
			],
			[
				"verify",
				"libraries/base/verify.h"
			],
			[
				"verify.h",
				"libraries/base/verify.h"
			],
			[
				"tool_cal",
				"libraries/robotics/control/robot/tool/tool_calibration.proto"
			],
			[
				"uid_filter",
				"config/data/uid_filter.config.pbtxt"
			],
			[
				"eye_tracker_controller_ru",
				"executables/cockpit/eye_tracker_controller_runner.cc"
			],
			[
				"eye_tracker_thread",
				"libraries/eye_tracker/eye_tracker_thread.h"
			],
			[
				"rpc.h",
				"libraries/middleware/rpc.h"
			],
			[
				"",
				".bazelignore"
			],
			[
				"socket_loop.cc",
				"verb/libraries/middleware/socket_loop.cc"
			],
			[
				"root_rt_mess",
				"verb/libraries/robotics/control/robot/robot_rt_message_thread.cc"
			],
			[
				"api.h",
				"dts/core/api.h"
			],
			[
				"modeop_gca",
				"libraries/robotics/control/robot/modeop/modeop_gcab.cc"
			],
			[
				"config.h",
				"libraries/robotics/control/config.h"
			],
			[
				"simulated_pcie_client",
				"libraries/rtcomm/ringnet/pcie_simulated/simulated_pcie_client.h"
			],
			[
				"test_app.cc",
				"libraries/motor_control/client/test_app.cc"
			],
			[
				"system_config.lo",
				"config/data/system_config.localhost.pbtxt"
			],
			[
				"system_config.pbtxt",
				"config/data/system_config.pbtxt"
			],
			[
				"system_config_and",
				"verb_test/vstars/conf/system_config_handler.py"
			],
			[
				"inverse_",
				"config/schema/inverse_kinematics_param.proto"
			],
			[
				"publisher_lib",
				"verb_test/vstars/lib/low_level/_endpoint_lib/publisher_lib.py"
			],
			[
				"algorithm_gravity_comp",
				"libraries/robotics/control/robot/algorithm/algorithm_gravity_compensation.h"
			],
			[
				"algorithm_7dof",
				"libraries/robotics/control/robot/algorithm/algorithm_7dof_ik.cc"
			],
			[
				"touchpoint_",
				"tools/touchpoint_simulator/touchpoint_simulator.py"
			],
			[
				"touchpoint_simul",
				"tools/touchpoint_simulator/touchpoint_simulator.py"
			],
			[
				"urdf_convert_test",
				"tools/urdf_joint_axis_conversion/testdata/urdf_convert_test_reference.urdf"
			],
			[
				"convert_urdf_test",
				"tools/urdf_joint_axis_conversion/convert_urdf_test.py"
			],
			[
				"status_messa",
				"libraries/robotics/control/robot/status_message.h"
			],
			[
				"robot_al",
				"config/data/robot_algorithm_params.pbtxt"
			],
			[
				"status_message.h",
				"libraries/robotics/control/robot/status_message.h"
			],
			[
				"robot_algor",
				"config/data/robot_algorithm_params.pbtxt"
			],
			[
				"status.h",
				"libraries/robotics/control/robot/status.h"
			],
			[
				"platform_publ",
				"libraries/robotics/control/platform/platform_publisher.cc"
			],
			[
				"status_message.cc",
				"libraries/robotics/control/robot/status_message.cc"
			],
			[
				"platform_handler_colle",
				"sdk/impl/event_registration/platform/platform_handler_collection.cc"
			],
			[
				"status_mess",
				"libraries/robotics/control/robot/status_message.h"
			],
			[
				"ros_platfo",
				"ros/robotics/control/platform/ros_platform_publisher.cc"
			],
			[
				"status.cc",
				"libraries/robotics/control/robot/status.cc"
			],
			[
				"platform_publi",
				"libraries/robotics/control/platform/platform_publisher.cc"
			],
			[
				"platform",
				"interfaces/platform.proto"
			],
			[
				"ros_platform",
				"ros/robotics/control/platform/ros_platform_publisher.cc"
			],
			[
				"publisher_lib.py",
				"verb_test/vstars/lib/low_level/_endpoint_lib/publisher_lib.py"
			],
			[
				"robot_mode",
				"config/schema/robot_mode.proto"
			],
			[
				"subchannel.cc",
				"libraries/simulated_feedback/async/async_channel.cc"
			],
			[
				"robot_joint_to_motor.cc",
				"libraries/robotics/control/robot/robot_joint_to_motor.cc"
			],
			[
				"touchpoint_overrider.pbtxt",
				"config/data/simulated_feedback_plugins/touchpoint_overrider.pbtxt"
			],
			[
				"algorithm_predefined_mot",
				"libraries/robotics/control/robot/algorithm/algorithm_predefined_motion_multiple.cc"
			],
			[
				"algorithm_robot",
				"libraries/robotics/control/robot/algorithm/algorithm_robot_configurable.h"
			],
			[
				"vert",
				"tools/verb_trajectory_validation/verb_trajectory_validation.cc"
			],
			[
				"algorithm_robot_configurable",
				"libraries/robotics/control/robot/algorithm/algorithm_robot_configurable.h"
			],
			[
				"algorithm_robot_configurable.h",
				"libraries/robotics/control/robot/algorithm/algorithm_robot_configurable.h"
			],
			[
				"algorithm_robot_confi",
				"libraries/robotics/control/robot/algorithm/algorithm_robot_configurable.h"
			],
			[
				"algorithm_predefmul",
				"libraries/robotics/control/robot/algorithm/algorithm_predefined_motion_multiple.cc"
			],
			[
				"verb_trajectory_validation.cc",
				"verb/tools/verb_trajectory_validation/verb_trajectory_validation.cc"
			],
			[
				"algorithm_test.predefined_motion_multiple_param.pbtxt",
				"verb/libraries/robotics/control/robot/algorithm/testdata/algorithm_test.predefined_motion_multiple_param.pbtxt"
			],
			[
				"algorithm_robot_con",
				"verb/libraries/robotics/control/robot/algorithm/algorithm_robot_configurable.h"
			],
			[
				"algorithm_predemul",
				"verb/libraries/robotics/control/robot/algorithm/algorithm_predefined_motion_multiple.cc"
			],
			[
				"algorithm_predmul",
				"verb/libraries/robotics/control/robot/algorithm/algorithm_predefined_motion_multiple_test.cc"
			],
			[
				"PageLo",
				"src/numurus_rui/src/rui_webserver/rui-app/src/PageLock.js"
			],
			[
				"nd_status_publisher",
				"src/numurus_rui/src/numurus_rui/nd_status_publisher.py"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 95.0,
		"last_filter": "MicrosecondTimer",
		"selected_items":
		[
			[
				"MicrosecondTimer",
				"MicrosecondTimer"
			],
			[
				"MotorCommandMessage",
				"CreateMotorCommandMessage"
			],
			[
				"CyclicExe",
				"CyclicExecutor"
			],
			[
				"PidContro",
				"PIDControllerParams"
			],
			[
				"ParseActuatorsPbtxt",
				"ParseActuatorsPbtxt"
			],
			[
				"RtVector",
				"RtVector"
			],
			[
				"TimeDelta",
				"TimeDelta"
			],
			[
				"TimeDel",
				"TimeDelta"
			],
			[
				"SpscQueueP",
				"SpscQueueProducer"
			],
			[
				"SpscQue",
				"SpscQueueConsumer"
			],
			[
				"Time",
				"TimeTicks"
			],
			[
				"TimeTicks",
				"TimeTicks"
			],
			[
				"PidCon",
				"PIDController"
			],
			[
				"Algori",
				"AlgorithmBase"
			],
			[
				"ModeOpB",
				"ModeOpBase"
			],
			[
				"SpscQ",
				"SpscQueue"
			],
			[
				"Spsc",
				"SpscQueueProducer"
			],
			[
				"Pose",
				"Pose"
			],
			[
				"endpoint_lib",
				"LIBRARIES_TABLE_TAC_ENDPOINT_CLIENT_TBC_CLIENT_RX_HANDLER_H_"
			],
			[
				"Status",
				"StatusOrFail"
			],
			[
				"StatusOr",
				"StatusOrFail"
			],
			[
				"GazeUpdate",
				"GazeUpdate"
			],
			[
				"GuidServiceRpcServer",
				"GuidServiceRpcServerImpl"
			],
			[
				"ControllerMessageQueue",
				"PostToControllerMessageQueue"
			],
			[
				"EXIT_SUC",
				"EXIT_SUCCESS"
			],
			[
				"EXIT_FAILURE",
				"EXIT_FAILURE"
			],
			[
				"NodeProgram",
				"NodeProgram"
			],
			[
				"MakeNodeProgram",
				"MakeNodeProgram"
			],
			[
				"ReadConfigFile",
				"ReadConfigFile"
			],
			[
				"GetRobotConfig",
				"GetRobotConfig"
			],
			[
				"ValueOrDie",
				"ValueOrDie"
			],
			[
				"Getsystemconfi",
				"GetSystemConfig"
			],
			[
				"GetSystemConfig",
				"GetSystemConfig"
			],
			[
				"modeoptel",
				"ModeOpTeleoperation"
			],
			[
				"modeopte",
				"ModeOpTeleoperation"
			],
			[
				"Modeop",
				"ModeOpGcab"
			],
			[
				"InstallTerminationSignalHandler",
				"InstallTerminationSignalHandler"
			],
			[
				"InstallTerm",
				"InstallTerminationSignalHandler"
			],
			[
				"CloudMessage",
				"CloudMessageReceived"
			],
			[
				"LOG_INFO",
				"LOG_INFO"
			],
			[
				"LockAnd",
				"LockAndReserveMemory"
			],
			[
				"Locka",
				"LockAndReserveMemory"
			],
			[
				"simulated_ringnet_server",
				"_simulated_ringnet_server_cmd"
			],
			[
				"SimulatorRu",
				"SimulatorRunner"
			],
			[
				"ModeL",
				"ModeListener"
			],
			[
				"Simulator",
				"Simulator"
			]
		],
		"width": 796.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 404.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
